<% if @view_in_config && @erb_code %>
  <%= render inline: @erb_code %>
  
<% else %>
<%= simple_form_for(@contract) do |f| %>    
 
  <%= f.input :contract_date, :label => t('Contract Date'), :as => :string %> 
  <%= f.input :customer_name_autocomplete, :input_html => { data: {autocomplete_source: kustomerx.autocomplete_customers_path}}, :placeholder => t("Enter keyword"), :label => t("Customer") if @customer.blank? %>
  <%= f.input :contract_num, :label => t('Contract#'), :readonly => readonly?(@contract, 'contract_num') %>
  <%= f.input :contract_info, :label => t('Contract Info'), :input_html => {:rows => 4}, :readonly => readonly?(@contract, 'contract_info') %>
  <%= f.input :contract_total, :label => t('Contract Total($)'), :readonly => readonly?(@contract, 'contract_total') %> 
  <%= f.input :other_charge, :label => t('Other Charge($)'), :readonly => readonly?(@contract, 'other_charge') %>
  <%= f.input :payment_agreement, :label => t('Payment Agreement'), :input_html => {:rows => 4}, :readonly => readonly?(@contract, 'payment_agreement') %>   
  <%= f.input :payment_term, :label => t('Payment Term(day)'), :collection => [0,10,15,30,45,60,90,120] unless readonly?(@contract, 'payment_term') %>
  <%= f.input :payment_term, :label => t('Payment Term(day)'), :readonly => true, :input_html => {:value => @contract.payment_term} if readonly?(@contract, 'payment_term') %>
  <%= f.input :contract_on_file_noupdate, :label => t('Contract On File?'), :readonly => true, :input_html => {:value => (@contract.contract_on_file ? t('Yes') : t('No'))} if readonly?(@contract, 'contract_on_file')%>
  <%= f.input :contract_on_file, :label => t('Contract On File?'), :as => :boolean unless readonly?(@contract, 'contract_on_file')%>
  <%= f.input :paid_out_noupdate, :label => t('Paid Out'), :readonly => true, :input_html => {:value => (@contract.paid_out ? t('Yes') : t('No'))} if readonly?(@contract, 'contract_on_file') %>
  <%= f.input :void, :label => t('Void'), :as => :boolean unless readonly?(@contract, 'void') %>
  <%= f.input :void_noupdate, :label => t('Void'), :readonly => true,  :input_html => {:value => (@contract.void ? t('Yes') : t('No'))} if readonly?(@contract, 'void') %>
  <%= f.input :paid_out, :label => t('Paid Out'), :as => :boolean unless readonly?(@contract, 'paid_out') %>
  <%= f.input :signed, :label => t('Signed'), :input_html => {:value => (@contract.signed ? t('Yes') : t('No'))} unless readonly?(@contract, 'signed') %>
  <%= f.input :signed_noupdate, :label => t('Signed'), :readonly => true, :input_html => {:value => (@contract.signed ? t('Yes') : t('No'))} if readonly?(@contract, 'signed') %>
  <%= f.input :sign_date, :label => t('Sign Date'), :as => :string %>
  <%= f.input :signed_by_id, :label => t('Signed By'), :collection => Authentify::UsersHelper.return_users('sales', params[:controller]), :label_method => :name, 
              :value_method => :id, :include_blank => true unless readonly?(@contract, 'signed_by_id')%>
  <%= f.input :signed_by_name, :label => t('Signed By'), :input_html => {:value => @contract.signed_by.name} if readonly?(@contract, 'signed_by_id')%>
  <%= f.input :sales_id, :label => t('Sales'), :collection => Authentify::UsersHelper::return_users('sales', 'multi_item_contractx_contracts'), :label_method => :name, :value_method => :id,
              :include_blank => true unless readonly?(@contract, 'sales_id') %>
  <%= f.input :sales_name, :label => t('Sales'), :readonly => true, :input_html => {:value => @contract.sales.name} if readonly?(@contract, 'sales_id') %>
             
  <%= link_to t('Back'), SUBURI + "/authentify/view_handler?index=0", :class => BUTTONS_CLS['action'] %>
  <%= f.button :submit, t('Save'), :class => BUTTONS_CLS['action'] %>  
<% end %> 

<% end %>
